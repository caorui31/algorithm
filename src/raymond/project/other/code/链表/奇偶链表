/*
 * @lc app=leetcode.cn id=328 lang=java
 *
 * [328] 奇偶链表
 * 
 * 给定一个单链表，把所有的奇数节点和偶数节点分别排在一起。请注意，这里的奇数节点和偶数节点指的是节点编号的奇偶性，而不是节点的值的奇偶性。
 * 请尝试使用原地算法完成。你的算法的空间复杂度应为 O(1)，时间复杂度应为 O(nodes)，nodes 为节点总数。
 * 
 */
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode oddEvenList(ListNode head) {
        if(head == null || head.next == null || head.next.next == null) {
            return head;
        }

        // 需要记录两个指针
        // p: 已经处理过的奇数节点的最后一个位置，下一个奇数节点插在p后面
        // q: 当前已经处理到哪个节点

        ListNode p = head, q = head.next;
        ListNode nextq = null, nextp = null;
        while(q != null && q.next != null) {
            nextq = q.next.next;
            nextp = q.next;
            q.next = nextp.next;
            nextp.next = p.next;
            p.next = nextp;
            p = nextp;
            q = nextq;
        }
    
        return head;
    }
}

