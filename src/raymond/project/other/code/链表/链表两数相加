/*
 * @lc app=leetcode.cn id=445 lang=java
 *
 * [445] 两数相加 II
 */

// @lc code=start
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        if(l1 == null) return l2;
        if(l2 == null) return l1;

        // 将两个链表插入栈中，模拟加法从个位数开始求和
        Stack<Integer> s1 = new Stack<>();
        Stack<Integer> s2 = new Stack<>();

        while(l1 != null) {
            s1.push(l1.val);
            l1 = l1.next;
        }

        while(l2 != null) {
            s2.push(l2.val);
            l2 = l2.next;
        }

        ListNode dummyHead = new ListNode(-1);
        int x = 0, y = 0, carry = 0, val = 0;
        while(!s1.empty() ||
         !s2.empty()) {
            x = s1.empty() ? 0 : s1.pop();
            y = s2.empty() ? 0 : s2.pop();
            val = x + y + carry;
            carry = val / 10;
            val %= 10;
            ListNode tmp = new ListNode(val);
            tmp.next = dummyHead.next;
            dummyHead.next = tmp;
        }

        if(carry != 0) {
            ListNode tmp = new ListNode(carry);
            tmp.next = dummyHead.next;
            dummyHead.next = tmp;
        }

        return dummyHead.next;
    }
}
// @lc code=end

